// <auto-generated />
using AmeliyatDefteri.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AmeliyatDefteri.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240306160753_SqlTables")]
    partial class SqlTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.8");

            modelBuilder.Entity("AmeliyatDefteri.Entity.Ameliyat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Anestezi")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Ameliyatlar");
                });

            modelBuilder.Entity("AmeliyatDefteri.Entity.Doktor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Doktorlar");
                });

            modelBuilder.Entity("AmeliyatDefteri.Entity.Hasta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Anestezi")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Detay")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Hastalar");
                });

            modelBuilder.Entity("AmeliyatDoktor", b =>
                {
                    b.Property<int>("AmeliyatlarId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DoktorlarId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AmeliyatlarId", "DoktorlarId");

                    b.HasIndex("DoktorlarId");

                    b.ToTable("AmeliyatDoktor");
                });

            modelBuilder.Entity("AmeliyatHasta", b =>
                {
                    b.Property<int>("AmeliyatlarId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HastalarId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AmeliyatlarId", "HastalarId");

                    b.HasIndex("HastalarId");

                    b.ToTable("AmeliyatHasta");
                });

            modelBuilder.Entity("AmeliyatDoktor", b =>
                {
                    b.HasOne("AmeliyatDefteri.Entity.Ameliyat", null)
                        .WithMany()
                        .HasForeignKey("AmeliyatlarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmeliyatDefteri.Entity.Doktor", null)
                        .WithMany()
                        .HasForeignKey("DoktorlarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AmeliyatHasta", b =>
                {
                    b.HasOne("AmeliyatDefteri.Entity.Ameliyat", null)
                        .WithMany()
                        .HasForeignKey("AmeliyatlarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmeliyatDefteri.Entity.Hasta", null)
                        .WithMany()
                        .HasForeignKey("HastalarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
